name: Build and Push to ECR AWS

on: workflow_dispatch

env:
  # AWS_REGION: eu-west-1
  # ECR_REPO: private-example
  IMAGE_TAG: ${{ github.sha }}
  AWS_ACCOUNT_ID: 730335574072

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # see: https://github.com/aws-actions/amazon-ecr-login
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Checkout front-end repository
      uses: actions/checkout@v2
      with:
        repository: microservices-demo/front-end

    - name: Build, tag, and push front-end image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: private-example
        IMAGE_TAG: front-end-${{ github.sha }}
      run: |

        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Checkout catalogue repository
      uses: actions/checkout@v2
      with:
        repository: microservices-demo/catalogue

    - name: Build, tag, and push catalogue image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: private-example
        IMAGE_TAG: catalogue-${{ github.sha }}
      run: |
        cd docker/catalogue
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Build, tag, and push catalogue-db image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: private-example
        IMAGE_TAG: catalogue-db-${{ github.sha }}
      run: |
        cd docker/catalogue-db
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Log out of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
